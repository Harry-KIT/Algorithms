Ignacio

Implement Linux find command as an API. The API will support finding files that:

Files that have a given size requirement.
Files with a certain naming pattern.
Focus on 2 uses cases at first:

Find all files over 5 MB somewhere under a directory.
Find all XML files somewhere under a directory.

class File () {
   String name;
   FileType type;
   boolean isDirectory;

   // getter & setters
   boolean isDirectory() {
       return isDirectory;
   }

   listFiles()
}

class FileType () {

}

Class Directory {

   List<File> files;

   public List<File> findFile(String path, boolean withType, List<FileType> type, boolean withSize, Long size) {
       List<File> foundFiles = new ArrayList<>();

      for (File file : files) {
        if (file.isDirectory())
          continue;

          // multi filter
          if (withType && file.getType() == type) {
              foundFiles.add(file);
          }

      }


       return foundFiles;
   }

   public findFile(path, [size]) {
       List<File> foundFiles = new ArrayList<>();

      for (File file : files) {
          if (file.getSize() <= size) {
              foundFiles.add(file);
          }
      }


       return foundFiles;
   }

   public findFile(path, [name]) {
       List<File> foundFiles = new ArrayList<>();

      for (File file : files) {
          if (file.getName().equals(name)) {
              foundFiles.add(file);
          }
      }

       
       return foundFiles;
   }

   findFile(path, [or(name, type)]) {
       List<File> foundFiles = new ArrayList<>();

      for (File file : files) {
          if (file.getName().equals(name) && ) {
              foundFiles.add(file);
          }
      }


       return foundFiles;
   }
}




